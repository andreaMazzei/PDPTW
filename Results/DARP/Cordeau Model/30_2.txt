C:\Users\andre\Desktop\Multi-Vehicle-DARP\.venv\Scripts\python.exe C:\Users\andre\Desktop\Multi-Vehicle-DARP\Models\DARP\Cordeau\cordeau.py 
num_clients: 30
num_companies: 2
num_vehicles: 2 with maximum capacity 15
Time horizon: 120 minutes
max_route_duration: 120 minutes
max_ride_time_client: 45 minutes
Source =  0 Sink =  61
vehicles =  [0, 1]
All points =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
Points no depots =  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60]
Pickup points =  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]
Delivery points =  [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60]
set1 =  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 0]
set2 =  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
Association delivery vertex - companies:  {31: 31, 32: 31, 33: 31, 34: 31, 35: 31, 36: 31, 37: 31, 38: 31, 39: 31, 40: 31, 41: 31, 42: 31, 43: 31, 44: 31, 45: 31, 46: 32, 47: 32, 48: 32, 49: 32, 50: 32, 51: 32, 52: 32, 53: 32, 54: 32, 55: 32, 56: 32, 57: 32, 58: 32, 59: 32, 60: 32}
Service time: {0: 0, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 0}
Demand:  {0: 0, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: -1, 32: -1, 33: -1, 34: -1, 35: -1, 36: -1, 37: -1, 38: -1, 39: -1, 40: -1, 41: -1, 42: -1, 43: -1, 44: -1, 45: -1, 46: -1, 47: -1, 48: -1, 49: -1, 50: -1, 51: -1, 52: -1, 53: -1, 54: -1, 55: -1, 56: -1, 57: -1, 58: -1, 59: -1, 60: -1, 61: 0}
Earliest time:  {0: 0, 1: 0, 2: 30, 3: 60, 4: 0, 5: 0, 6: 0, 7: 30, 8: 30, 9: 0, 10: 30, 11: 0, 12: 30, 13: 60, 14: 0, 15: 0, 16: 0, 17: 30, 18: 30, 19: 0, 20: 30, 21: 30, 22: 30, 23: 0, 24: 30, 25: 0, 26: 30, 27: 60, 28: 0, 29: 0, 30: 30, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0}
Latest time:  {0: 120, 1: 30, 2: 60, 3: 90, 4: 30, 5: 30, 6: 30, 7: 60, 8: 60, 9: 30, 10: 60, 11: 30, 12: 60, 13: 90, 14: 30, 15: 30, 16: 30, 17: 60, 18: 60, 19: 30, 20: 60, 21: 60, 22: 60, 23: 30, 24: 60, 25: 30, 26: 60, 27: 90, 28: 30, 29: 30, 30: 60, 31: 120, 32: 120, 33: 120, 34: 120, 35: 120, 36: 120, 37: 120, 38: 120, 39: 120, 40: 120, 41: 120, 42: 120, 43: 120, 44: 120, 45: 120, 46: 120, 47: 120, 48: 120, 49: 120, 50: 120, 51: 120, 52: 120, 53: 120, 54: 120, 55: 120, 56: 120, 57: 120, 58: 120, 59: 120, 60: 120, 61: 120}
Tempo medio = 5.039397762744797 minutes
Distanza media = 2.740127315296566 km
Multi vehicle DARP
Minimizing total route distance (cost = distance)
Set parameter Username
Academic license - for non-commercial use only - expires 2024-12-04
Discarded solution information
Set parameter TimeLimit to value 600
Set parameter InfUnbdInfo to value 1
Gurobi Optimizer version 11.0.0 build v11.0.0rc2 (win64 - Windows 11.0 (22621.2))

CPU model: Intel(R) Core(TM) i7-8550U CPU @ 1.80GHz, instruction set [SSE2|AVX|AVX2]
Thread count: 4 physical cores, 8 logical processors, using up to 8 threads

Optimize a model with 892 rows, 7996 columns and 26244 nonzeros
Model fingerprint: 0x5ed3c4ef
Model has 14644 general constraints
Variable types: 308 continuous, 7688 integer (7688 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [8e-02, 7e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+02]
  GenCon rhs range [1e+00, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 10878 rows and 0 columns
Presolve removed 0 rows and 1484 columns
Presolve time: 0.17s
Presolved: 11770 rows, 6512 columns, 51232 nonzeros
Variable types: 300 continuous, 6212 integer (6198 binary)

Root relaxation: objective 3.534520e+01, 670 iterations, 0.04 seconds (0.04 work units)

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0   35.34520    0  180          -   35.34520      -     -    0s
     0     0   35.47976    0  206          -   35.47976      -     -    0s
     0     0   37.69290    0  178          -   37.69290      -     -    1s
     0     0   37.69756    0  205          -   37.69756      -     -    1s
     0     0   37.69756    0  191          -   37.69756      -     -    1s
     0     0   37.70855    0  206          -   37.70855      -     -    2s
     0     0   37.70855    0  202          -   37.70855      -     -    2s
     0     0   37.70855    0  192          -   37.70855      -     -    2s
     0     0   37.70855    0  200          -   37.70855      -     -    2s
     0     0   37.70855    0  117          -   37.70855      -     -    3s
     0     0   37.70855    0  177          -   37.70855      -     -    3s
     0     0   37.70855    0   87          -   37.70855      -     -    3s
     0     0   37.72420    0  121          -   37.72420      -     -    4s
     0     0   37.72420    0  116          -   37.72420      -     -    4s
     0     0   37.72420    0  184          -   37.72420      -     -    4s
     0     0   37.72420    0   85          -   37.72420      -     -    5s
     0     0   37.73985    0   85          -   37.73985      -     -    5s
     0     2   37.73985    0   82          -   37.73985      -     -    6s
   239   252   38.91210   45  142          -   37.73985      -  57.4   10s
   721   698   42.59462   36  146          -   37.73985      -  52.6   15s
  1174  1041   53.19786   97 3106          -   37.75960      -  48.2   21s
  1178  1044   40.74466   49  189          -   37.75960      -  48.1   26s
  1182  1046   46.15947   71  201          -   38.14512      -  47.9   30s
  1188  1050   38.64914   14  146          -   38.62170      -  47.7   35s
  1192  1053   45.06642  113  116          -   38.62292      -  47.5   40s
  1200  1060   45.34948  120 3106          -   38.62292      -  55.6   45s
  1204  1063   40.32878   25  150          -   38.62612      -  55.4   50s
  1211  1067   53.38965   98  123          -   38.62612      -  55.1   55s
  1221  1074   40.90302   47  122          -   38.62613      -  54.7   60s
  1224  1079   38.63060   21  172          -   38.63060      -  78.1   74s
  1226  1082   38.63060   22  154          -   38.63060      -  78.7   75s
  1316  1145   41.02813   33  142          -   38.63204      -  98.2   80s
  1464  1234   44.41755   52   59          -   38.63204      -   116   85s
  1596  1331   46.19970   74   57          -   38.63204      -   131   90s
  1817  1431   38.68290   27  154          -   38.65383      -   139   95s
  1981  1516   38.94312   41   69          -   38.65383      -   148  100s
  2316  1759   45.09489   82   28          -   38.65383      -   146  105s
  2567  1849   38.80614   36   87          -   38.66053      -   151  110s
  2829  2035   46.84557   64   50          -   38.66053      -   155  116s
  3225  2359   54.85670  167   51          -   38.66053      -   148  121s
  3771  2553   39.13074   31  110          -   38.67190      -   141  126s
  4164  2772   41.59040  161   29          -   38.67190      -   141  131s
  4415  2899   38.78985   26  185          -   38.67598      -   141  135s
  4876  3541   48.17714   90   38          -   38.68687      -   139  142s
  5432  3925   42.64261   42   98          -   38.68687      -   134  147s
  5885  4239   46.97210   80   85          -   38.69095      -   133  152s
  6284  4592   43.63275   60   41          -   38.69196      -   133  157s
  6555  4726   40.17421   38  127          -   38.70305      -   132  160s
  6693  4898   42.95536   53  120          -   38.70305      -   134  174s
  6898  5108   45.76822   52  121          -   38.70305      -   132  177s
  7158  5320   48.38303   78   91          -   38.70569      -   133  180s
  7788  5762   40.42175   68   70          -   38.71279      -   131  187s
  7984  6008   39.28651   32  187          -   38.71279      -   132  191s
  8249  6320   43.69803   81   95          -   38.72551      -   133  195s
  8846  6979   42.59068   50  131          -   38.73998      -   135  203s
  9429  7145 infeasible  110               -   38.75098      -   134  207s
  9649  7471   48.52420   75   43          -   38.76482      -   137  211s
 10048  8099   41.39020   41   95          -   38.76658      -   136  216s
 10737  8499   41.18506   39  122          -   38.76658      -   134  226s
 11231  9247   50.94570   85   57          -   38.77270      -   132  231s
 12340  9816   42.47852   49   66          -   38.78985      -   128  237s
 12820 10025   39.05072   31  138          -   38.78990      -   126  241s
 13464 10543   40.22825   32  100          -   38.79032      -   126  247s
 13624 10799   42.07550   48  131          -   38.79032      -   127  251s
 14268 11223   39.75301   28  109          -   38.79435      -   127  258s
 14462 11800   44.47096   45  130          -   38.79510      -   127  262s
 15173 12185   39.66595   41   82          -   38.79700      -   124  266s
 15895 12564   42.72726   42   85          -   38.79700      -   124  272s
 16092 12710   44.49756   56  157          -   38.79700      -   125  276s
 16285 13248   48.11771   64   73          -   38.80940      -   126  280s
 17161 13663   52.42167   52   57          -   38.81647      -   125  286s
 17462 13999 infeasible   69               -   38.82182      -   125  290s
 18193 14491   58.83231  119   57          -   38.82526      -   125  297s
 18495 14802   73.67520  181   22          -   38.82526      -   125  301s
 18889 14992   46.22537   50   81          -   38.82526      -   125  305s
 19871 15909   50.08702   59   93          -   38.84280      -   124  312s
 20238 16195   74.48097  106   45          -   38.84280      -   124  316s
 20617 16354   44.34944   54   57          -   38.84907      -   124  320s
 21438 17175   44.26163   71   73          -   38.85495      -   124  538s
 21848 17677   42.54215   48   75          -   38.86113      -   124  543s
 22393 18047   39.50678   42   53          -   38.86837      -   124  547s
 22853 18457   41.68775   81   60          -   38.87038      -   123  552s
 23343 18559   41.33645   45  129          -   38.87038      -   124  555s
 23531 18956   43.19319   55  116          -   38.87710      -   124  560s
 24342 19552 infeasible  147               -   38.87911      -   124  568s
 24711 20051   64.46142  109   53          -   38.88479      -   124  572s
 25345 20224   41.60270   33  115          -   38.88637      -   123  576s
 25542 20700   46.49608   66   73          -   38.89513      -   124  580s
 26545 21302   39.94030   38  149          -   38.89881      -   122  588s
 26898 21746   43.38763   59  112          -   38.89881      -   122  592s
 27409 21746   54.60170  104   68          -   38.89881      -   122  600s
Traceback (most recent call last):
  File "C:\Users\andre\Desktop\Multi-Vehicle-DARP\Models\DARP\Cordeau\cordeau.py", line 140, in <module>
    sol_x = {k: v.X for k, v in x.items() if v.X > 0.01}
                                             ^^^
  File "src\\gurobipy\\var.pxi", line 125, in gurobipy.Var.__getattr__
  File "src\\gurobipy\\var.pxi", line 153, in gurobipy.Var.getAttr
  File "src\\gurobipy\\attrutil.pxi", line 103, in gurobipy._getattr
AttributeError: Unable to retrieve attribute 'X'. Did you mean: 'Xn'?

Cutting planes:
  Gomory: 6
  Cover: 8
  Implied bound: 24
  Projected implied bound: 1
  Clique: 4
  MIR: 6
  Mixing: 1
  Flow cover: 23
  Zero half: 9
  RLT: 18
  Relax-and-lift: 37

Explored 27419 nodes (3355100 simplex iterations) in 600.05 seconds (558.74 work units)
Thread count was 8 (of 8 available processors)

Solution count 0

Time limit reached
Best objective -, best bound 3.889881196517e+01, gap -

Process finished with exit code 1
